In[1]:=SetDirectory[FileNameJoin[{NotebookDirectory[]}]];
<<Units`
<<PhysicalConstants`

PotentialData = Import["potential_data.out","Table"];
PartitionFunction=Import["PartitionFunction_0_0.out","Table"];
FreeEnergy=Import["FreeEnergy_0_0.out","Table"];
dPartitionFunction=Import["dPartitionFunction_0_0.out","Table"];
dFreeEnergy=Import["dFreeEnergy_0_0.out","Table"];
MXDr=Import["mxd_r.out","Table"];
MXDlambda=Import["mxd_lambda.out","Table"];
MXDrho=Import["mxd_roe.out","Table"];
Parameters=Import["Parameters"];

\[Epsilon]=Parameters[[17,2]];
\[Beta]=Parameters[[18,2]];
L=Parameters[[1,2]];
m=Parameters[[2,2]];
\[CapitalDelta]=Parameters[[6,2]];
\[Kappa]=Parameters[[3,2]];
\[Sigma]=Parameters[[4,2]];
\[Kappa]\[Sigma]r=Parameters[[5,2]];
umax=Parameters[[7,2]];
umax=Parameters[[8,2]];

n=ToExpression[StringTrim[Last[StringSplit[Directory[],"/"]],RegularExpression["N*"]]];
etab=14.5;

ToNewton=Convert[ElectronVolt/Angstrom,Newton] SI[Pico Newton]^-1;(*Converts eV/\[Angstrom] to pN*)
ToForceDimension[f_]:=(f (\[Kappa]/(2\[Beta]))^(1/2)) ToNewton;
ToDimension[\[Eta]_]:=\[Eta] ((\[Kappa] \[Beta])/2)^(-(1/2));(*Converts to \[Angstrom]*)

xzpair=-((\[Sqrt]3 MXDlambda+MXDrho)/\[Sqrt]2);
xypair=\[Sqrt]2MXDrho;

NearestValue=Nearest[Transpose[Chop[xzpair,10^-5]][[1]],etab][[1]];
upos=Flatten[Position[Transpose[Chop[xzpair,10^-5]][[1]],NearestValue]][[1]];
U=upos-1;
Grid[Chop[xzpair,10^-5],Background->{Automatic,{upos->Yellow}}];

fpos={{0,dFreeEnergy[[upos]][[2]]},{dFreeEnergy[[upos]][[1]],dFreeEnergy[[upos]][[2]]},{dFreeEnergy[[upos]][[1]],0},{dFreeEnergy[[upos]][[1]],dFreeEnergy[[upos]][[2]]}};
F=dFreeEnergy[[upos]][[2]];
u=dFreeEnergy[[upos]][[1]];

Fc=ToForceDimension[F];
Export["N"<>ToString[n]<>"_sim.data",{{n,Fc}},"Table"];
